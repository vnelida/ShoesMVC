@model ShoeSizeVm
@{
    Layout = null; 
}

<form asp-action="UpsertShoeSize" method="post" id="shoeSizeForm">
    
    <input type="hidden" name="ShoeId" value="@Model.ShoeId" />

    <div class="form-group">
        <label>Seleccione Tallas:</label>
        <div class="row" required>
            @foreach (var size in Model.Sizes)
            {
                <div class="col-4 mb-2">
                    <div class="form-check" style="margin-left: 30px;">
                        <input type="checkbox" class="form-check-input" name="sizeIds" value="@size.Value" id="size-@size.Value" />
                        <label class="form-check-label" for="size-@size.Value">@size.Text</label>
                    </div>
                </div>
            }
        </div>
    </div>

    <div class="form-group">
        <label for="QuantityInStock">Qty. Stock:</label>
        <input asp-for="QuantityInStock" class="form-control" type="number" min="0" />
    </div>
    <button type="submit" class="btn btn-primary">Guardar</button>
    
</form>

<script>
    document.getElementById('shoeSizeForm').addEventListener('submit', function (event) {
        const sizeCheckboxes = document.querySelectorAll('input[name="sizeIds"]:checked');

        // Valida si se selecciono una talla
        if (sizeCheckboxes.length === 0) {
            event.preventDefault();
            swal("Warning", "You must select at least one size.", "warning");
            return; // Asegurarseque no se envie el formulario
        }

        // Envia el formulario usando AJAX
        event.preventDefault(); 

        const formData = new FormData(this); // Obtiene los datos del formulario

        // Enviar el formulario con AJAX
        fetch(this.action, {
            method: 'POST',
            body: formData,
        })
            .then(async response => {
                if (!response.ok) {
                    const errorData = await response.json();  // JSON del error
                    throw new Error(errorData.message);  // mensaje de error
                }
                return response.json();  // Si esta ok obtiene la respuesta como JSON
            })
            .then(data => {
                // mensajito de exito 
                Swal.fire({
                    position: "top-end",
                    icon: "success",
                    title: data.message,
                    showConfirmButton: false,
                    timer: 2000
                });

                // cierra el modal
                $('#shoeSizeModal').modal('hide');

                $('#sizesTableContainer').load(window.location.href + " #sizesTableContainer > *", function () {
                    $(this).children(':first').unwrap(); // evita la duplicación del contenedor
                });
            })
            .catch(error => {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: error.message,
                    confirmButtonText: 'OK'
                });
            });
    });
</script>